// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Suivi {
  id              String      @id
  type            String
  data            Json        @default("{}")
  computed_impact Boolean     @default(false)
  created_at      DateTime    @default(now()) @db.Timestamptz(3)
  updated_at      DateTime    @updatedAt @db.Timestamptz(3)
  utilisateurId   String
  utilisateur     Utilisateur @relation(fields: [utilisateurId], references: [id])
}

model OIDC_STATE {
  loginId       String   @id
  utilisateurId String?  @unique
  state         String?
  nonce         String?
  idtoken       String?
  created_at    DateTime @default(now()) @db.Timestamptz(3)
  updated_at    DateTime @default(now()) @updatedAt @db.Timestamptz(3)
}

model Utilisateur {
  id                       String             @id
  email                    String?            @unique
  nom                      String?            @default("nom")
  prenom                   String?            @default("prenom")
  annee_naissance          Int?
  passwordHash             String?            @default("hash")
  passwordSalt             String?            @default("salt")
  revenu_fiscal            Int?
  onboardingData           Json               @default("{}") // versioné 
  onboardingResult         Json               @default("{}") // versioné 
  todo                     Json               @default("{}") // versioné 
  gamification             Json               @default("{}") // versioné 
  history                  Json               @default("{}") // versioné 
  kyc                      Json               @default("{}") // versioné
  unlocked_features        Json               @default("{}") // versioné 
  equipements              Json               @default("{}") // versioné 
  logement                 Json               @default("{}") // versioné 
  transport                Json               @default("{}") // versioné 
  defis                    Json               @default("{}") // versioné
  missions                 Json               @default("{}") // versioné
  bilbiotheque_services    Json               @default("{}") // versioné
  notification_history     Json               @default("{}") // versioné
  empreintes               Empreinte[]
  suivis                   Suivi[]
  groupes                  GroupeAbonnement[]
  created_at               DateTime           @default(now()) @db.Timestamptz(3)
  updated_at               DateTime           @default(now()) @updatedAt @db.Timestamptz(3)
  failed_login_count       Int                @default(0)
  prevent_login_before     DateTime           @default(now())
  code                     String?
  code_generation_time     DateTime?
  active_account           Boolean            @default(true)
  failed_checkcode_count   Int                @default(0)
  prevent_checkcode_before DateTime           @default(now())
  sent_email_count         Int                @default(0)
  prevent_sendemail_before DateTime           @default(now())
  services                 Service[]
  parts                    Decimal?           @db.Decimal(4, 2)
  abonnement_ter_loire     Boolean            @default(false)
  code_departement         String?
  version                  Int                @default(0)
  migration_enabled        Boolean            @default(false)
  tag_ponderation_set      Json               @default("{}")
  force_connexion          Boolean            @default(false)
  derniere_activite        DateTime?
  db_version               Int                @default(0)
  is_magic_link_user       Boolean            @default(false)
  points_classement        Int                @default(0)
  code_postal_classement   String?
  commune_classement       String?
  rank                     Int?
  rank_commune             Int?
  status                   String?
  couverture_aides_ok      Boolean            @default(false)
  source_inscription       String             @default("web")
}

model Statistique {
  utilisateurId           String   @id
  nombre_defis_realises   Int?
  nombre_defis_abandonnes Int?
  nombre_defis_pas_envie  Int?
  nombre_defis_en_cours   Int?
  thematiques_en_cours    String?
  thematiques_terminees   String?
  univers_en_cours        String?
  univers_termines        String?
  created_at              DateTime @default(now()) @db.Timestamptz(3)
  updated_at              DateTime @updatedAt @db.Timestamptz(3)
}

model DefiStatistique {
  content_id              String   @id
  titre                   String?
  nombre_defis_realises   Int?
  nombre_defis_abandonnes Int?
  nombre_defis_en_cours   Int?
  nombre_defis_pas_envie  Int?
  raisons_defi_pas_envie  String[] @default([])
  raisons_defi_abandonne  String[] @default([])
  created_at              DateTime @default(now()) @db.Timestamptz(3)
  updated_at              DateTime @updatedAt @db.Timestamptz(3)
}

model ServicesFavorisStatistique {
  service_id    String
  favoris_id    String
  titre_favoris String
  count_favoris Int      @default(0)
  created_at    DateTime @default(now()) @db.Timestamptz(3)
  updated_at    DateTime @updatedAt @db.Timestamptz(3)

  @@unique([service_id, favoris_id])
}

model ArticleStatistique {
  articleId                 String   @id
  titre                     String
  rating                    Decimal? @db.Decimal(2, 1)
  nombre_de_rating          Int?
  nombre_de_mise_en_favoris Int?
  created_at                DateTime @default(now()) @db.Timestamptz(3)
  updated_at                DateTime @updatedAt @db.Timestamptz(3)
}

model QuizStatistique {
  quizId                     String   @id
  titre                      String
  nombre_de_bonne_reponse    Int
  nombre_de_mauvaise_reponse Int
  created_at                 DateTime @default(now()) @db.Timestamptz(3)
  updated_at                 DateTime @updatedAt @db.Timestamptz(3)
}

model KycStatistique {
  kycId         String
  utilisateurId String
  titre         String
  reponse       String

  @@id([utilisateurId, kycId])
}

model UniversStatistique {
  universId                    String   @id
  titre                        String
  completion_pourcentage_1_20  Int      @default(0)
  completion_pourcentage_21_40 Int      @default(0)
  completion_pourcentage_41_60 Int      @default(0)
  completion_pourcentage_61_80 Int      @default(0)
  completion_pourcentage_81_99 Int      @default(0)
  completion_pourcentage_100   Int      @default(0)
  created_at                   DateTime @default(now()) @db.Timestamptz(3)
  updated_at                   DateTime @updatedAt @db.Timestamptz(3)
}

model ThematiqueStatistique {
  thematiqueId                 String   @id
  titre                        String
  completion_pourcentage_1_20  Int      @default(0)
  completion_pourcentage_21_40 Int      @default(0)
  completion_pourcentage_41_60 Int      @default(0)
  completion_pourcentage_61_80 Int      @default(0)
  completion_pourcentage_81_99 Int      @default(0)
  completion_pourcentage_100   Int      @default(0)
  created_at                   DateTime @default(now()) @db.Timestamptz(3)
  updated_at                   DateTime @updatedAt @db.Timestamptz(3)
}

model LinkyConsentement {
  id                    String   @id
  utilisateurId         String
  date_consentement     DateTime
  date_fin_consentement DateTime
  mention_usage_donnees String
  type_donnees          String
  texte_signature       String
  nom                   String
  prenom                String
  email                 String
  prm                   String
  created_at            DateTime @default(now()) @db.Timestamptz(3)
  updated_at            DateTime @updatedAt @db.Timestamptz(3)
}

model Aide {
  content_id            String   @id
  titre                 String
  contenu               String
  url_simulateur        String?
  is_simulateur         Boolean?
  codes_postaux         String[] @default([])
  thematiques           String[] @default([])
  montant_max           Int?
  besoin                String?
  besoin_desc           String?
  include_codes_commune String[] @default([])
  exclude_codes_commune String[] @default([])
  codes_departement     String[] @default([])
  codes_region          String[] @default([])
  created_at            DateTime @default(now()) @db.Timestamptz(3)
  updated_at            DateTime @updatedAt @db.Timestamptz(3)
}

model Defi {
  content_id         String   @id
  titre              String
  sous_titre         String?
  astuces            String?
  pourquoi           String?
  points             Int
  thematique         String
  tags               String[] @default([])
  universes          String[] @default([])
  thematiquesUnivers String[] @default([])
  categorie          String   @default("recommandation")
  mois               Int[]    @default([])
  conditions         Json     @default("[]")
  created_at         DateTime @default(now()) @db.Timestamptz(3)
  updated_at         DateTime @updatedAt @db.Timestamptz(3)
}

model Article {
  content_id            String   @id
  titre                 String
  soustitre             String?
  source                String?
  image_url             String?
  partenaire            String?
  tags_utilisateur      String[] @default([])
  rubrique_ids          String[] @default([])
  rubrique_labels       String[] @default([])
  codes_postaux         String[] @default([])
  duree                 String?
  frequence             String?
  difficulty            Int      @default(1)
  points                Int      @default(0)
  thematique_principale String?
  thematiques           String[] @default([])
  categorie             String   @default("recommandation")
  mois                  Int[]    @default([])
  include_codes_commune String[] @default([])
  exclude_codes_commune String[] @default([])
  codes_departement     String[] @default([])
  codes_region          String[] @default([])
  tag_article           String?
  created_at            DateTime @default(now()) @db.Timestamptz(3)
  updated_at            DateTime @updatedAt @db.Timestamptz(3)
}

model Quizz {
  content_id            String   @id
  titre                 String
  soustitre             String?
  source                String?
  image_url             String?
  partenaire            String?
  tags_utilisateur      String[] @default([])
  rubrique_ids          String[] @default([])
  rubrique_labels       String[] @default([])
  codes_postaux         String[] @default([])
  duree                 String?
  frequence             String?
  difficulty            Int      @default(1)
  points                Int      @default(0)
  thematique_principale String?
  thematiques           String[] @default([])
  categorie             String   @default("recommandation")
  mois                  Int[]    @default([])
  created_at            DateTime @default(now()) @db.Timestamptz(3)
  updated_at            DateTime @updatedAt @db.Timestamptz(3)
}

model BilanCarboneStatistique {
  utilisateurId String   @id
  situation     Json
  total_g       Int
  transport_g   Int
  alimenation_g Int
  created_at    DateTime @default(now()) @db.Timestamptz(3)
  updated_at    DateTime @updatedAt @db.Timestamptz(3)
}

model Empreinte {
  id            String       @id
  initial       Boolean      @default(true)
  bilan         Json?
  created_at    DateTime     @default(now()) @db.Timestamptz(3)
  updated_at    DateTime     @default(now()) @updatedAt @db.Timestamptz(3)
  utilisateur   Utilisateur  @relation(fields: [utilisateurId], references: [id])
  utilisateurId String
  situationId   String       @unique
  situation     SituationNGC @relation(fields: [situationId], references: [id])
}

model Thematique {
  id         String   @id
  id_cms     Int      @unique
  titre      String
  created_at DateTime @default(now()) @db.Timestamptz(3)
}

model Univers {
  id_cms     Int      @unique
  code       String
  label      String?
  image_url  String?
  is_locked  Boolean  @default(true)
  created_at DateTime @default(now()) @db.Timestamptz(3)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamptz(3)
}

model ThematiqueUnivers {
  id_cms         Int      @unique
  code           String
  label          String?
  image_url      String?
  niveau         Int?     @default(0)
  univers_parent String?
  famille_id_cms Int      @default(0)
  famille_ordre  Int      @default(0)
  created_at     DateTime @default(now()) @db.Timestamptz(3)
  updated_at     DateTime @default(now()) @updatedAt @db.Timestamptz(3)
}

model Mission {
  id_cms                 Int      @unique
  thematique_univers     String?  @unique
  objectifs              Json     @default("{}")
  prochaines_thematiques String[] @default([])
  est_visible            Boolean
  created_at             DateTime @default(now()) @db.Timestamptz(3)
  updated_at             DateTime @default(now()) @updatedAt @db.Timestamptz(3)
}

model FileAttente {
  email       String   @unique
  code_postal String?
  code_profil String?
  created_at  DateTime @default(now()) @db.Timestamptz(3)
  updated_at  DateTime @default(now()) @updatedAt @db.Timestamptz(3)
}

model KYC {
  id_cms     Int      @unique
  code       String   @unique
  type       String
  categorie  String
  points     Int
  is_ngc     Boolean
  ngc_key    String?
  question   String
  reponses   Json     @default("{}")
  thematique String
  tags       String[] @default([])
  universes  String[] @default([])
  created_at DateTime @default(now()) @db.Timestamptz(3)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamptz(3)
}

model SituationNGC {
  id         String     @id
  situation  Json?
  empreinte  Empreinte?
  created_at DateTime   @default(now()) @db.Timestamptz(3)
}

model Service {
  id                  String             @id
  serviceDefinitionId String
  serviceDefinition   ServiceDefinition? @relation(fields: [serviceDefinitionId], references: [id])
  utilisateurId       String
  utilisateur         Utilisateur        @relation(fields: [utilisateurId], references: [id])
  configuration       Json               @default("{}")
  status              String             @default("CREATED")

  created_at DateTime @default(now()) @db.Timestamptz(3)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamptz(3)

  @@unique([serviceDefinitionId, utilisateurId])
}

model ServiceDefinition {
  id                 String    @id
  titre              String
  icon_url           String?
  image_url          String?
  url                String?
  is_url_externe     Boolean?
  is_local           Boolean   @default(false)
  minute_period      Int?
  scheduled_refresh  DateTime? @db.Timestamptz(3)
  last_refresh       DateTime? @db.Timestamptz(3)
  dynamic_data       Json      @default("{}")
  thematiques        String[]  @default([])
  description        String?
  sous_description   String?
  parametrage_requis Boolean   @default(false)
  created_at         DateTime  @default(now()) @db.Timestamptz(3)
  updated_at         DateTime  @default(now()) @updatedAt @db.Timestamptz(3)
  services           Service[]
}

model Groupe {
  id           String             @id @default(uuid())
  name         String
  description  String?
  utilisateurs GroupeAbonnement[]
  created_at   DateTime           @default(now()) @db.Timestamptz(3)
  updated_at   DateTime           @default(now()) @updatedAt @db.Timestamptz(3)
}

model GroupeAbonnement {
  groupe        Groupe      @relation(fields: [groupeId], references: [id])
  groupeId      String
  utilisateur   Utilisateur @relation(fields: [utilisateurId], references: [id])
  utilisateurId String
  admin         Boolean     @default(false)
  created_at    DateTime    @default(now()) @db.Timestamptz(3)
  updated_at    DateTime    @default(now()) @updatedAt @db.Timestamptz(3)

  @@id([groupeId, utilisateurId])
}

model Linky {
  utilisateurId String?  @unique
  winter_pk     String?  @unique
  prm           String   @id
  data          Json     @default("{}")
  created_at    DateTime @default(now()) @db.Timestamptz(3)
  updated_at    DateTime @default(now()) @updatedAt @db.Timestamptz(3)
}

view PrenomVue {
  id     String @id  @default(uuid())
  prenom String
}
